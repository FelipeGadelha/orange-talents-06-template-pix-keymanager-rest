plugins {
    id("org.jetbrains.kotlin.jvm") version "1.5.21"
    id("org.jetbrains.kotlin.kapt") version "1.5.21"
    id("com.github.johnrengelman.shadow") version "7.0.0"
    id("io.micronaut.application") version "2.0.3"
    id("org.jetbrains.kotlin.plugin.allopen") version "1.5.21"
    id("com.google.protobuf") version "0.8.15"
}

version = "0.1"
group = "br.com.zup.felipe.gadelha"

allOpen {
    annotation("javax.inject.Singleton")
}
repositories {
    mavenCentral()
}

micronaut {
    runtime "netty"
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("br.com.zup.felipe.gadelha.*")
    }
}

dependencies {
    kapt("io.micronaut.data:micronaut-data-processor")
    implementation("io.micronaut:micronaut-runtime")

    implementation("io.micronaut.grpc:micronaut-grpc-client-runtime")
    implementation("io.micronaut.kotlin:micronaut-kotlin-runtime")
    implementation("javax.annotation:javax.annotation-api")
    implementation("org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}")
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}")
    runtimeOnly("ch.qos.logback:logback-classic")
    implementation("io.micronaut:micronaut-validation")
    implementation("io.micronaut:micronaut-management")
    implementation("io.micronaut.beanvalidation:micronaut-hibernate-validator")
//    implementation("io.micronaut.grpc:micronaut-grpc-runtime")
//    implementation("javax.inject:javax.inject:1")
//    annotationProcessor("io.micronaut:micronaut-inject-java:2.5.12")

    implementation("io.micronaut:micronaut-http-client")

    runtimeOnly("com.fasterxml.jackson.module:jackson-module-kotlin")

    testImplementation("org.testcontainers:junit-jupiter")
    testImplementation("org.testcontainers:testcontainers")
    // testes
    testAnnotationProcessor("io.micronaut:micronaut-inject-java")
    testImplementation("org.mockito:mockito-core")
    testImplementation("com.h2database:h2")
    testImplementation("io.micronaut:micronaut-http-client")
    // https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-params
    testImplementation("org.junit.jupiter:junit-jupiter-params:5.7.2")
    // https://mvnrepository.com/artifact/com.github.javafaker/javafaker
    testImplementation("com.github.javafaker:javafaker:1.0.2")

    testImplementation("org.mockito:mockito-inline:3.+")
}

application {
    mainClass.set("br.com.zup.felipe.gadelha.ApplicationKt")
}
java {
    sourceCompatibility = JavaVersion.toVersion("11")
}

tasks {
    compileKotlin {
        kotlinOptions {
            jvmTarget = "11"
        }
    }
    compileTestKotlin {
        kotlinOptions {
            jvmTarget = "11"
        }
    }
}
sourceSets {
    main {
        java {
            srcDirs("build/generated/source/proto/main/grpc")
            srcDirs("build/generated/source/proto/main/java")
        }
    }
}

protobuf {
    protoc { artifact = "com.google.protobuf:protoc:3.17.2" }
    plugins {
        grpc { artifact = "io.grpc:protoc-gen-grpc-java:1.38.0" }
    }
    generateProtoTasks {
        all()*.plugins { grpc {} }
    }
}
